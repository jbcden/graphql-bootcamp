type Query {
  posts(query: String): [Post!]!
  users(query: String): [User!]!
  me: User!
  post: Post!
  comments: [Comment!]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput!): User!

  createPost(data: CreatePostInput!): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, data: UpdatePostInput!): Post!

  createComment(data: CreateCommentInput!): Comment!
  deleteComment(id: ID!): Comment!
  updateComment(id: ID!, data: UpdateCommentInput!): Comment!
}

input CreatePostInput {
  title: String!
  body: String!
  published: Boolean!
  author: ID!
}

input UpdatePostInput {
  title: String
  body: String
  published: Boolean
}

type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}

input UpdateUserInput {
  name: String,
  email: String,
  age: Int
}

input CreateUserInput {
  name: String!
  email: String
  age: Int
}

type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post!]!
  comments: [Comment!]!
}

input UpdateCommentInput {
  text: String
}

input CreateCommentInput {
  text: String!
  author: ID!
  post: ID!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}
